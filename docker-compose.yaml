version: '3'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    container_name: elasticsearch
    environment:
      - cluster.name=es-docker-cluster # 클러스터 명. 이름이 같아야만 같은 클러스터로 인식되니 주의!
      - node.name=es-node-01 # 노드 이름. 안 붙이면 임의값. 여기서는 테스트이므로 single node로 구성할 것임.
      - xpack.security.enabled=false # xpack security를 사용하지 않을 것임 (x-pack : elk stack 확장팩 느낌) 게다가 이거 유료임
      - "discovery.type=single-node" 
      - bootstrap.memory_lock=true # 엘라스틱이 사용할 메모리 lock
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" # jvm이 사용 가능한 힙 사이즈
      - network.host=0.0.0.0 # 특정 ip만 접속 가능. 여기선 0.0.0.0 즉, 모두 접근 가능으로 열어둠
      - "path.repo=./elasticsearch/backup" # 백업을 위한 스냅샷 저장 경로
    ulimits: # 프로세스 자원 한도 설정
      memlock: # 메모리 내 주소 공간의 최대 크기
        soft: -1 # 기본 적용 값
        hard: -1 # soft에서 최대로 늘릴 한도
    networks:
      - elastic # 네트워크 이름
    volumes:
      - ./es-node-01-data:/usr/share/elasticsearch/data # 데이터를 저장할 디렉토리 
    ports:
      - 9200:9200 # external:internal(local:container)

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.2 # es와 kibana의 버전이 호환되는지 체크할 것 https://blog.voidmainvoid.net/329
    container_name: kibana
    depends_on:
      - "elasticsearch" # es가 가동된 후에 kibana가 가동되어야 한다.
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    networks:
      - elastic # 네트워크 이름
    ports:
      - 5601:5601

networks:
  elastic:
